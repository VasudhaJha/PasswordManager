swagger: "2.0"
info:
  description: "This is a Password Manager server."
  version: "1.0.0"
  title: "Password Manager"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "reachvasudha27@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "passwordmanager.swagger.io"
basePath: "/v1"
tags:
- name: "Users"
  description: "Everything about Users"
schemes:
- "https"
- "http"
paths:
  /users:
    post:
      tags:
      - "Users"
      summary: "Add a new user"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User added successfully"
        "400":
          description: "Invalid request body"
  /login:
    post:
      tags:
      - "Login"
      summary: "Verify credentials to sign in an existing user"
      description: ""
      operationId: "verifyUserCredentials"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "credentials"
        description: "email and password that need to be verified"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: "User authenticated"
        "401":
          description: "Incorrect password"
        "404":
          description: "User does not exist"
  /users/{email}:
    delete:
      tags:
      - "Users"
      summary: "Delete an existing user"
      description: ""
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "email"
        description: "email to find the user to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "User deleted"
    patch:
      tags:
      - "Users"
      summary: "Update an existing user's password"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "email"
        description: "user's email for which password is to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "User Data"
        description: "User's data to be updated"
        required: true
        schema:
          $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: "user updated"
        "400":
          description: "invalid request"
        "404":
          description: "user does not exist"
definitions:
  User:
    type: "object"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Credentials:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  UserUpdate:
    type: "object"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      password:
        type: "string"